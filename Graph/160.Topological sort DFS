import java.util.* ;
import java.io.*; 
public class Solution 
{
    public static ArrayList<Integer> topologicalSort(ArrayList<ArrayList<Integer>> edges, int v, int e) 
    {
        // Write your code here
        ArrayList<Integer> res = new ArrayList<>();

        ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
        for(int i=0;i<v;i++){
            adj.add(new ArrayList<>());
        }
        for(ArrayList<Integer> edge:edges){
            adj.get(edge.get(0)).add(edge.get(1));
        }

        int[] vis = new int[v];
        Stack<Integer> st = new Stack<>();

        for(int i=0;i<v;i++){
            if(vis[i]==0){
                dfs(i,adj,vis,st);
            }
        }
        while(!st.isEmpty()){
            res.add(st.pop());
        }
        return res;
    }
    public static void dfs(int src,ArrayList<ArrayList<Integer>> adj,int[] vis,Stack<Integer> st){
        vis[src]=1;
        for(int u:adj.get(src)){
            if(vis[u]==0){
                dfs(u,adj,vis,st);
            }
        }
        st.push(src);
    }
}
