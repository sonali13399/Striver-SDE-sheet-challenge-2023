public class Solution {
    static class Meeting {
        int st;
        int e;
        int pos;
        Meeting(int st,int e,int pos){
            this.st=st;
            this.e=e;
            this.pos=pos;
        }
        
    }
    static class MeetingComparator implements Comparator<Meeting>{
        @Override
        public int compare(Meeting o1,Meeting o2){
            if(o1.e < o2.e){
                return -1;
            }else if(o1.e>o2.e){
                return 1;
            }else if(o1.pos < o2.pos){
                return -1;
            }return 1;
        }
    }
    public static List<Integer> maximumMeetings(int[] start, int[] end) {        
        //Write your code here

        ArrayList<Meeting> meet = new ArrayList<>();
        for(int i=0;i<start.length;i++){
            meet.add(new Meeting(start[i],end[i],i+1));
        }
        MeetingComparator mc = new MeetingComparator();
        Collections.sort(meet,mc);
        ArrayList<Integer> answer = new ArrayList<>();
        answer.add(meet.get(0).pos);
        int limit = meet.get(0).e;
        for(int i=1;i<meet.size();i++){
            if(meet.get(i).st < limit){
                limit = meet.get(i).e;
                answer.add(meet.get(i).pos);
            }
        }
        return answer;
    }
}
